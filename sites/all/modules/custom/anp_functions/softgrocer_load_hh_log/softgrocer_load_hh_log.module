<?php

function softgrocer_load_hh_log_menu () {
	$items = array();
	$items['admin/config/services/softgrocer_load_hh_log'] = array(
		'title' => 'SoftGrocer Load HandHeld Logs',
		'description' => 'Configuration for SoftGrocer Load HandHeld Logs module',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('softgrocer_load_hh_log_form'),
		'access arguments' => array('access administration pages'),
		'type' => MENU_NORMAL_ITEM,
	);
	$items['softgrocer/load_hh_log'] = array(
		'title' => 'Load HH Error Log',
		'page callback' => 'softgrocer_load_hh_log_execute',
		'access arguments' => array('access administration pages'),
		'type' => MENU_NORMAL_ITEM,
	);
	return $items;
}
function softgrocer_load_hh_log_execute() {
  return array('#markup' => '<p>' . t(sgLoadLog()) . '</p>');
}
function softgrocer_load_hh_log_form ($form, &$form_state) {
	$form['softgrocer_load_hh_log_file_location'] = array(
		'#type' => 'textfield',
		'#title' => t('Location of Log File'),
		'#default_value' => variable_get('softgrocer_load_hh_log_file_location',''),
		'#size' => 50,
		'#maxlength' => 50,
		'#description' => t('The location of the SoftGrocer HandHeld Error Log file.'),
		'#required' => TRUE,		
	);
	$form['softgrocer_load_hh_log_cron'] = array(
		'#type' => 'checkbox',
		'#title' => t('Run during Cron?'),
		'#default_value' => variable_get('softgrocer_load_hh_log_cron',1),
		'#description' => t('Do we want to run periodically through cron?'),
		'#required' => FALSE,
	);
	$form['softgrocer_load_hh_log_interval'] = array(
		'#type' => 'textfield',
		'#title' => t('Cron Interval'),
		'#default_value' => variable_get('softgrocer_load_hh_log_interval',3600),
		'#size' => 10,
		'#maxlength' => 10,
		'#description' => t('The number of seconds between Cron executions.'),
		'#required' => TRUE,
	);
	return system_settings_form($form);
}
function softgrocer_load_hh_log_form_validate ($form, &$form_state) {
	if(!ctype_digit(strval($form_state['values']['softgrocer_load_hh_log_interval']))) {
		form_set_error('softgrocer_load_hh_log_interval', t('Interval value must be an integer.'));
	}
	if($form_state['values']['softgrocer_load_hh_log_interval'] <= 0) {
		form_set_error('softgrocer_load_hh_log_interval', t('Interval value must be greater than zero.'));
	}
}
function softgrocer_load_hh_log_cron() {
	$enabled = variable_get('softgrocer_load_hh_log_cron',0);
	if($enabled = 1) {
		$interval = variable_get('softgrocer_load_hh_log_interval',3600);
		if (time() >= variable_get('softgrocer_load_hh_log_next_execution', 0)) {
			drupal_set_time_limit(0);
			//$res = sgLoadLog();
			watchdog('softgrocer_load_hh_log', 'softgrocer_load_hh_log_cron ran');
			variable_set('softgrocer_load_hh_log_next_execution', time() + $interval);
		}
	}
}


function sgLoadLog() {

	ini_set('memory_limit','1G');
	ini_set('max_execution_time',0);

	db_set_active('bip');

	$logfile = variable_get('softgrocer_load_hh_log_file_location','');

	$return = "";
	$return .= "Log File Location: ".$logfile."<br />";

	if(!is_file($logfile)){
		db_set_active();
	        return("Log file (".$logfile.") does not exist!");
	}
	$log = file($logfile);

	for($i=0; $i <sizeof($log); $i++){
	        $line = trim($log[$i]);
	        if(substr($line,0,5) == "TIME:"){
	                $fields = split(":",$line);
	                $time = date("Y-m-d H:i:s",strtotime(trim(str_replace("PROGRAM","",$fields[1].":".$fields[2].":".$fields[3]))));
	                $program = trim(str_replace("SC","",$fields[4]));
	                $sc = trim(str_replace("ERROR","",$fields[5]));
	                $error = trim($fields[6]);
	                $i++;
	                $line = trim($log[$i]);
	                if(ereg("(([0-9]{1,3}\.){3}[0-9]{1,3})",$line,$ipPart)){
	                        $ip = $ipPart[0];
	                        $parts = split("\.",$ip);
	                        array_pop($parts);
	                        array_shift($parts);
	                        $site = join("",$parts);
	                }else{
	                        $ip = "";
	                        $site = "";
	                }
	                $message = $line;
	                //$sqlstr = "insert ignore into sgr_hh_log values('','".$time."','".$program."',".$sc.",".$error.",'".$ip."',".$site.",'".$message."')";
	                //$result = mysql_query($sqlstr, $capacity_mgt);
			$keys = array(
				'shl_time' => $time,
				'shl_program' => $program,
				'shl_sc' => $sc,
				'shl_error' => $error,
				'shl_ip' => $ip,
				'shl_site' => $site,
			);
			$fields = array(
				'shl_message' => $message,
			);
			db_merge('sgr_hh_log')->key($keys)->fields($fields)->execute();
	        }
	}
	unlink($logfile);

	//$return .= "<pre>".print_r($jobs,TRUE)."</pre>";
	
	db_set_active();
	return($return);
}

